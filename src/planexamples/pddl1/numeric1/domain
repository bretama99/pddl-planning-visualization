(define (domain logistics)
  (:requirements :strips :typing :fluents)
  (:types
    truck airplane - vehicle
    package vehicle - physobj
    airport location - place
    city place physobj - object
  )

  (:predicates
    (in-city ?loc - place ?city - city) ;If a place (airport or location) is in a city
    (at ?obj - physobj ?loc - place) ;true if a phisical object (package, truck, airplane) is in a place (airport or location)
    (in ?pkg - package ?veh - vehicle) ;true if a package is in a vehicle (truck or location)
  )
  
    (:functions
  (capacity ?v - vehicle)
  (current-load ?v - vehicle)
    )

    (:action load-truck
    :parameters (?pkg - package ?truck - truck ?loc - place)
    :precondition (and
      (at ?truck ?loc)
      (at ?pkg ?loc)
      (< (current-load ?truck) (capacity ?truck))  ; verifica capacità
    )
    :effect (and
      (not (at ?pkg ?loc))
      (in ?pkg ?truck)
      (increase (current-load ?truck) 1)            ; incrementa carico
    )
  )

  (:action unload-truck
    :parameters (?pkg - package ?truck - truck ?loc - place)
    :precondition (and
      (at ?truck ?loc)
      (in ?pkg ?truck)
    )
    :effect (and
      (not (in ?pkg ?truck))
      (at ?pkg ?loc)
      (decrease (current-load ?truck) 1)            ; decrementa carico
    )
  )

  (:action load-airplane
    :parameters (?pkg - package ?airplane - airplane ?loc - airport)
    :precondition (and
      (at ?pkg ?loc)
      (at ?airplane ?loc)
      (< (current-load ?airplane) (capacity ?airplane))  ; verifica capacità
    )
    :effect (and
      (not (at ?pkg ?loc))
      (in ?pkg ?airplane)
      (increase (current-load ?airplane) 1)               ; incrementa carico
    )
  )

  (:action unload-airplane
    :parameters (?pkg - package ?airplane - airplane ?loc - airport)
    :precondition (and
      (in ?pkg ?airplane)
      (at ?airplane ?loc)
    )
    :effect (and
      (not (in ?pkg ?airplane))
      (at ?pkg ?loc)
      (decrease (current-load ?airplane) 1)               ; decrementa carico
    )
  )

  ; A truck can always drive within a city 
  (:action drive-truck
    :parameters (?truck - truck ?loc-from - place ?loc-to - place ?city - city)
    :precondition (and
      (at ?truck ?loc-from)
      (in-city ?loc-from ?city)
      (in-city ?loc-to ?city)
    )
    :effect (and
      (not (at ?truck ?loc-from))
      (at ?truck ?loc-to)
    )
  )

  ; A plane can only fly between cities which have an airport
  ; so ?loc-from and loc-to are airpors, not places
  (:action fly-airplane
    :parameters (?airplane - airplane ?loc-from - airport ?loc-to - airport)
    :precondition (at ?airplane ?loc-from)
    :effect (and
      (not (at ?airplane ?loc-from))
      (at ?airplane ?loc-to)
    )
  )
)